name: P-UNIT-PROJECT-CI-MICROSERVICE

on:
  push:
    branches:
      - main

  pull_request:
    types:
      - closed
    branches:
      - main

env:
  REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  APP_NAME: ${{ vars.APP }}

jobs:
  compliance:
    name: Compliance
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Install Prerequisites
        run: pip install bandit

      - name: Bandit SAST Scan
        run: bandit -ll -ii -r . -f json -o bandit-results.json

      - name: Trivy File Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          exit-code: 1
          format: sarif
          severity: HIGH,CRITICAL
          output: trivy-results.sarif

      - name: Build Docker Image
        run: docker build -f Dockerfile -t ${{ env.APP_NAME }}:security-test .

      - name: Docker Scout Image Scan
        uses: docker/scout-action@v1
        with: 
          dockerhub-user: ${{ secrets.DOCKER_REGISTRY }}
          dockerhub-password: ${{ secrets.DOCKER_PAT }}
          command: quickview,cves

      - name: Publish Trivy Report
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif

      - name: Publish Bandit Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: bandit-results
          path: bandit-results.json

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: compliance
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump Version Tag
        id: tag_version
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_PAT }}
          WITH_V: true
          DEFAULT_BUMP: patch
          INITIAL_VERSION: 1.0.0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_REGISTRY }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build & Push
        id: build_push
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: "${{ env.REGISTRY }}/${{ env.APP_NAME }}:${{ steps.tag_version.outputs.new_tag }}"
          push: true

    outputs:
      IMAGE_TAG: ${{ steps.tag_version.outputs.new_tag }}